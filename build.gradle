plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.6'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.assignment'
version = '0.0.1-SNAPSHOT'
description = 'apr-backend-assignment'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'com.querydsl:querydsl-jpa:5.1.0:jakarta'
    annotationProcessor 'com.querydsl:querydsl-apt:5.1.0:jakarta'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'

    implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16'

    implementation 'com.github.f4b6a3:ulid-creator:5.2.3'
    implementation 'com.github.f4b6a3:uuid-creator:6.1.1'
    implementation 'com.github.f4b6a3:tsid-creator:5.2.6'

    implementation 'org.apache.commons:commons-lang3:3.18.0'

    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    implementation('org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.12') {
        exclude group: 'org.apache.commons', module: 'commons-lang3'
    }

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    runtimeOnly 'com.h2database:h2'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}

def generated = layout.buildDirectory.dir("generated/querydsl")

tasks.withType(JavaCompile).configureEach {
    options.generatedSourceOutputDirectory.set(generated)
}

sourceSets {
    main {
        java {
            srcDirs += generated.get().asFile
        }
    }
}
